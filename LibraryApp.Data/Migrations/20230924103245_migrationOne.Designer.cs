// <auto-generated />
using LibraryApp.Data.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryApp.Data.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20230924103245_migrationOne")]
    partial class migrationOne
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("LibraryApp.Entity.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Niccolo Machiavelli"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fyodor Dostoyevski"
                        },
                        new
                        {
                            Id = 3,
                            Name = "William Shakespeare"
                        });
                });

            modelBuilder.Entity("LibraryApp.Entity.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CheckedOut")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LibraryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LibraryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CheckedOut = false,
                            ISBN = "978-1514649312",
                            LibraryId = 1,
                            Title = "Prince"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CheckedOut = true,
                            ISBN = "978-0140449136",
                            LibraryId = 1,
                            Title = "Crime and Punishment"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            CheckedOut = true,
                            ISBN = "978-0140449242",
                            LibraryId = 2,
                            Title = "The Brothers Karamazov"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            CheckedOut = false,
                            ISBN = "978-0241252086",
                            LibraryId = 1,
                            Title = "White Nights"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            CheckedOut = true,
                            ISBN = "978-0743477109",
                            LibraryId = 2,
                            Title = "Macbeth "
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            CheckedOut = false,
                            ISBN = "979-8630242716",
                            LibraryId = 1,
                            Title = "Hamlet"
                        });
                });

            modelBuilder.Entity("LibraryApp.Entity.Library", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Libraries");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        });
                });

            modelBuilder.Entity("LibraryApp.Entity.Book", b =>
                {
                    b.HasOne("LibraryApp.Entity.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Entity.Library", null)
                        .WithMany("Books")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("LibraryApp.Entity.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryApp.Entity.Library", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
